version: '3.8'

services:
  db:
    container_name: db_postgres
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db
  backend:
    container_name: backend_django
    build:
      context: ./backend
    command: gunicorn config.wsgi --bind 0.0.0.0:8000
    volumes:
      - media_volume:/backend/media
    ports:
      - 8000:8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
  redis:
    container_name: redis
    image: redis:alpine
  celery:
    container_name: celery
    build: ./backend
    command: celery -A config worker -l info
    env_file:
      - ./.env.prod
    depends_on:
      - backend
      - redis
  celery-beat:
    container_name: celery_beat
    build: ./backend
    command: celery -A config beat -l info
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - backend
      - redis
  frontend:
    container_name: frontend_react
    build:
      context: ./frontend
    volumes:
      - frontend_build:/frontend/build
    stdin_open: true
    tty: true
  nginx:
    container_name: nginx
    build: ./nginx
    volumes:
      - frontend_build:/var/www/frontend
      - media_volume:/backend/media
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    restart: always 
    depends_on:
      - backend
      - frontend
  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
volumes:
  postgres_data:
  media_volume:
  frontend_build:
